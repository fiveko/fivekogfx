/*
 @file fivekogfx.js
 @brief Fiveko Graphics library 
 The FivekoGFX library is based on OpenGL/WebGL and HTML5 technolgies

 @defgroup FivekoGFX Fiveko Graphics

 Copyright (c) 2017 fiveko.com
 See the LICENSE file for copying permission.
*/
function FivekoGFX(f){function b(c){try{return c.getContext("webgl",{premultipliedAlpha:!1})||c.getContext("experimental-webgl",{premultipliedAlpha:!1})}catch(h){console.log("ERROR: %o",h)}return null}function a(c,h){var d=new XMLHttpRequest;d.open("GET",c,!1);d.onreadystatechange=function(){4!==d.readyState||200!==d.status&&0!=d.status||h(d.responseText);return h("")};d.send(null)}function e(c){var h=c.createTexture();c.bindTexture(c.TEXTURE_2D,h);c.pixelStorei(c.UNPACK_FLIP_Y_WEBGL,!0);c.texParameteri(c.TEXTURE_2D,
c.TEXTURE_MIN_FILTER,c.NEAREST);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.NEAREST);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE);return h}function g(c,h,d){var a=c.getAttribLocation(h,"a_position"),b=c.getUniformLocation(h,"u_image");h=c.getUniformLocation(h,"u_textureSize");c.vertexAttribPointer(a,2,c.FLOAT,!1,0,0);c.enableVertexAttribArray(a);var a=c.canvas.width,e=c.canvas.height;c.bindFramebuffer(c.FRAMEBUFFER,
d);c.uniform2f(h,a,e);c.uniform1i(b,0);c.viewport(0,0,a,e);c.drawArrays(c.TRIANGLES,0,6)}this.gl=f?b(f):b(document.createElement("canvas"));this.params={};this.programs={};this.sources={};FivekoGFX.prototype.createProgram=function(c,a,d){function h(c,d){var a=b.createShader(c);b.shaderSource(a,d);b.compileShader(a);return b.getShaderParameter(a,b.COMPILE_STATUS)?a:(alert("An error occurred compiling the shaders: "+b.getShaderInfoLog(a)),null)}var b=this.gl,e=this.programs[c];if(e)return b.useProgram(e),
e;d=d?h(b.VERTEX_SHADER,d):h(b.VERTEX_SHADER,"attribute vec2 a_position;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvoid main() { gl_Position = vec4(a_position, 0.0, 1.0); }");a=h(b.FRAGMENT_SHADER,a);e=b.createProgram();b.attachShader(e,d);b.attachShader(e,a);b.linkProgram(e);b.getProgramParameter(e,b.LINK_STATUS)?this.programs[c]=e:alert("Unable to initialize the shader program.");b.useProgram(e);return e};FivekoGFX.prototype.createProgramFromFile=function(c,b,d,e){a(b,function(a){""!==a?(a=createProgram(c,
a),e(a)):e(null)})};FivekoGFX.prototype.deleteProgram=function(c){var a=this.gl,d=this.programs[c];d&&(a.deleteProgram(d),this.programs[c]=null)};FivekoGFX.prototype.initialize=function(c,a){var d=this.gl,b=d.canvas;if(!this.originalImageTexture||b.width!=c||b.height!=a)if(b.width=c,b.height=a,this.originalImageTexture)for(var h=0;h<this.textures.length;h++)d.bindTexture(d.TEXTURE_2D,this.textures[h]),d.texImage2D(d.TEXTURE_2D,0,d.RGBA,b.width,b.height,0,d.RGBA,this.texType,null);else{this.originalImageTexture=
e(d);this.texType=d.getExtension("OES_texture_float")?d.FLOAT:d.UNSIGNED_BYTE;for(var h=[],g=[],f=0;2>f;++f){var k=e(d);h.push(k);d.texImage2D(d.TEXTURE_2D,0,d.RGBA,b.width,b.height,0,d.RGBA,this.texType,null);var n=d.createFramebuffer();g.push(n);d.bindFramebuffer(d.FRAMEBUFFER,n);d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_2D,k,0)}b=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,b);d.bufferData(d.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,-1,1,1,-1,1,1]),d.STATIC_DRAW);
this.textures=h;this.framebuffers=g;this.count=0}};FivekoGFX.prototype.load=function(c){var a=this.gl;this.initialize(c.width,c.height);var b=window.performance.now();a.bindTexture(a.TEXTURE_2D,this.originalImageTexture);a.texImage2D(a.TEXTURE_2D,0,a.RGBA,a.RGBA,a.UNSIGNED_BYTE,c);console.log("Image loaded!Elapsed: "+(window.performance.now()-b).toString())};FivekoGFX.prototype.renderto=function(c,a){g(this.gl,c,a)};FivekoGFX.prototype.draw=function(c){var a=this.gl,b=this.createProgram("draw","precision mediump float;\n\t\t\t\t\t\t\t\t\t\t\t\t\tuniform sampler2D u_image;\n\t\t\t\t\t\t\t\t\t\t\t\t\tuniform vec2 u_textureSize;\n\t\t\t\t\t\t\t\t\t\t\t\t\tvoid main() {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgl_FragColor = texture2D(u_image, textCoord);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}");
g(a,b,null);this.count=0;c&&c.getContext("2d").drawImage(a.canvas,0,0)};FivekoGFX.prototype.makeTextImage2D=function(c,a,b,e,g,f,l,k){var d=this.gl,h=d.createTexture();d.activeTexture(d.TEXTURE0+a);d.bindTexture(d.TEXTURE_2D,h);d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.NEAREST);d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE);d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE);d.texImage2D(d.TEXTURE_2D,0,f,e,g,0,f,l,k);c=d.getUniformLocation(c,b);d.uniform1i(c,a);
d.activeTexture(d.TEXTURE0)};FivekoGFX.prototype.readPixels=function(c){var a=this.gl;c||(c={data:new Uint8Array(a.canvas.width*a.canvas.height*4),width:a.canvas.width,height:a.canvas.height});a.readPixels(0,0,a.canvas.width,a.canvas.height,a.RGBA,a.UNSIGNED_BYTE,c.data);return c};FivekoGFX.prototype.getImageData=function(a,b,d,e){var c=this.gl,h=new Float32Array(d*e*4);c.readPixels(a,c.drawingBufferHeight-b-e,d,e,c.RGBA,c.FLOAT,h);return{data:h,width:d,height:e}};FivekoGFX.prototype.execute=function(a){var c=
this.gl;g(c,a,this.framebuffers[this.count%2]);c.bindTexture(c.TEXTURE_2D,this.textures[this.count%2]);++this.count}}FivekoGFX.params={};FivekoGFX.sources={};FivekoGFX.sourceText=function(f,b){return FivekoGFX.sources[f]};
FivekoGFX.prototype.loadShaders=function(f){function b(a,b){var c=document.getElementById(b);if(!c)return null;var e="",g=c.firstChild;for(console.log(a);g;)g.nodeType==g.TEXT_NODE&&(e+=g.textContent),g=g.nextSibling;if("x-shader/x-fragment"==c.type)c=a.createShader(a.FRAGMENT_SHADER);else if("x-shader/x-vertex"==c.type)c=a.createShader(a.VERTEX_SHADER);else return null;a.shaderSource(c,e);a.compileShader(c);return a.getShaderParameter(c,a.COMPILE_STATUS)?c:(alert("An error occurred compiling the shaders: "+
a.getShaderInfoLog(c)),null)}var a=this.gl,e=b(a,f[0]);f=b(a,f[1]);var g=a.createProgram();a.attachShader(g,f);a.attachShader(g,e);a.linkProgram(g);a.getProgramParameter(g,a.LINK_STATUS)||alert("Unable to initialize the shader program.");return g};(function(f){function b(a){var b=a.reduce(function(a,b){return a+b})||1;return a.map(function(a){return a/b})}f.prototype.conv2d=function(a){var e=~~Math.sqrt(a.length),c=this.gl,e=this.createProgram("conv2d_size_"+e,"\nprecision mediump float;\n\n#define KERNEL_SIZE %kernelSize%\n#define KERNEL_HALF KERNEL_SIZE / 2\n// our texture\nuniform sampler2D u_image;\nuniform float u_kernel[KERNEL_SIZE*KERNEL_SIZE];\nuniform vec2 u_textureSize;\n#define GET_PIXEL(_x, _y)   texture2D(u_image, textCoord + onePixel*vec2((_x), (_y)))\n#define imod(_x, _y)       int(mod(float(_x), float(_y)))\n\nvoid main() {\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tvec2 onePixel = vec2(1.0, 1.0) / u_textureSize;\n\tvec4 result = vec4(0.0);\n\tfor (int k = 0; k < KERNEL_SIZE*KERNEL_SIZE; k++)\n\t{\n\t\tresult += GET_PIXEL(imod(k, KERNEL_SIZE) - KERNEL_HALF, \n\t\t\t\t\t\t\tk / KERNEL_SIZE - KERNEL_HALF)*u_kernel[k];\n\t}\n\tgl_FragColor = vec4(result.rgb, 1.0);\n}".replace(/%kernelSize%/g,
e));c.useProgram(e);var h=c.getUniformLocation(e,"u_kernel[0]");c.uniform1fv(h,b(a));this.execute(e)};var a={ROWS:1,COLS:2,ALL:3};f.prototype.conv1d=function(e,g){var c=e.length+!(e.length&1),h=this.gl,c=this.createProgram("conv1d_size_"+c,"\nprecision mediump float;\n\n#define KERNEL_SIZE %kernelSize%\n#define KERNEL_HALF KERNEL_SIZE / 2\n// our texture\nuniform sampler2D u_image;\nuniform float u_kernel[KERNEL_SIZE];\nuniform vec2 u_direction;\nuniform vec2 u_textureSize;\n\nvoid main() {\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tvec2 onePixel = u_direction / u_textureSize;\n\tvec4 result = vec4(0.0);\n\tfor (int i = 0; i < KERNEL_SIZE; i++)\n\t{\n\t\tresult += texture2D(u_image, textCoord + onePixel*vec2(i - KERNEL_HALF))*u_kernel[i];\n\t}\n\tgl_FragColor = vec4(result.rgb, 1.0);\n}".replace(/%kernelSize%/g,
c));h.useProgram(c);var d=h.getUniformLocation(c,"u_direction"),f=h.getUniformLocation(c,"u_kernel[0]");h.uniform1fv(f,b(e));g=g||a.ALL;g&a.COLS&&(h.uniform2fv(d,[1,0]),this.execute(c));g&a.ROWS&&(h.uniform2fv(d,[0,1]),this.execute(c))};f.CONV_TYPE=a})(window.FivekoGFX);(function(f){f.prototype.nms=function(b){var a=parseInt(b||3)+!(b&1);b=this.gl;a=this.createProgram("nms_size_"+a,"\nprecision mediump float;\n\n#define KERNEL_SIZE %kernelSize%\n\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nuniform vec2 u_direction;\n\n#define GET_PIXEL(_p) (texture2D(u_image, textCoord + onePixel*float(_p)))\n \n\nvoid main() {\n\tvec2 onePixel = u_direction / u_textureSize;\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\t\n\tif (any(lessThan(GET_PIXEL(0).rgb, vec3(0.0))))\n\t{\n\t\tgl_FragColor = vec4(vec3(0.0), 1.0);\n\t}\n\telse\n\t{\n\t\tint maxIdx;\n\t\tfloat maxValue = 0.0;\n\t\t\n\t\tfor (int i = -KERNEL_SIZE; i <= KERNEL_SIZE; i++)\n\t\t{\n\t\t\tfloat p = length(GET_PIXEL(i).rgb);\n\t\t\tif (p > maxValue)\n\t\t\t{\n\t\t\t\tmaxValue = p;\n\t\t\t\tmaxIdx = i;\n\t\t\t}\n\t\t}\n\t\tgl_FragColor = vec4(vec3(maxValue*(1.0 - float(maxIdx != 0)*2.0)), 1.0);\n\t}\n}".replace(/%kernelSize%/g,
a));b.useProgram(a);var e=b.getUniformLocation(a,"u_direction");b.uniform2fv(e,[1,0]);this.execute(a);b.uniform2fv(e,[0,1]);this.execute(a)}})(window.FivekoGFX);(function(f){f.prototype.mean=function(b){var a=parseInt(b)+!(b&1);b=this.gl;var a=this.createProgram("mean_size_"+a,"\nprecision mediump float;\n\n#define KERNEL_SIZE %kernelSize%\n#define KERNEL_HALF (KERNEL_SIZE / 2)\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nuniform vec2 u_direction;\n\nvoid main() {\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tvec2 onePixel = u_direction / u_textureSize;\n\tvec4 meanColor = vec4(0.0);\n\tfor (int i = -KERNEL_HALF; i <= KERNEL_HALF; i++)\n\t{\n\t\tmeanColor += texture2D(u_image, textCoord + onePixel*vec2(i));\n\t}\n\tgl_FragColor = meanColor / float(KERNEL_SIZE);\n}".replace(/%kernelSize%/g,
a)),e=b.getUniformLocation(a,"u_direction");b.uniform2fv(e,[0,1]);this.execute(a);b.uniform2fv(e,[1,0]);this.execute(a)};f.prototype.blur=function(b){b=~~Math.min(12*b*b/8,100);for(var a=this.createProgram("blur3x3","\nprecision mediump float;\n\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nvoid main() {\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tvec2 onePixel = vec2(1.0, 1.0) / u_textureSize;\n\tgl_FragColor = (\n\t\ttexture2D(u_image, textCoord + onePixel*vec2(-1.0, -1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(0.0, -1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(1.0, -1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(-1.0, 0.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(0.0,  0.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(1.0,  0.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(-1.0, 1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(0.0,  1.0)) + \n\t\ttexture2D(u_image, textCoord + onePixel*vec2(1.0,  1.0))) / 9.0;\n}"),
e=0;e<b;e++)this.execute(a)}})(window.FivekoGFX);(function(f){f.prototype.gauss=function(b){if(0<b){var a=this.params.gauss;if(!a||a.sigma!==b){var a=Math.sqrt(2*Math.PI)*b,e=2*b*b,g,c=new Float32Array(15);var h=0;for(g=-7;15>h;g++,h++)c[h]=Math.exp(-(g*g)/e)/a;a={sigma:b,kernel:c};this.params.gauss=a}this.conv1d(a.kernel)}}})(window.FivekoGFX);(function(f){function b(a,b){var e=a.gl,c=a.createProgram("sobel","\nprecision mediump float;\n\n#define KERNEL_SIZE 3\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nuniform float u_kernel[KERNEL_SIZE];\n#define M_PI 3.14159265359\n#define GET_PIXEL(_x, _y) (texture2D(u_image, textCoord + onePixel*vec2(_x, _y)))\n \n\nvoid main() {\n\tvec2 onePixel = vec2(1.0, 1.0) / u_textureSize;\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tfloat dx = (length(GET_PIXEL(-1, -1)*u_kernel[0] +\n\t\t\t\tGET_PIXEL(-1,  0)*u_kernel[1] +\n\t\t\t\tGET_PIXEL(-1, +1)*u_kernel[2]) -\n\t\t\t   length(GET_PIXEL(+1, -1)*u_kernel[0] +\n\t\t\t\tGET_PIXEL(+1,  0)*u_kernel[1] +\n\t\t\t\tGET_PIXEL(+1, +1)*u_kernel[2]));\n\tfloat dy = (length(GET_PIXEL(-1, -1)*u_kernel[0] +\n\t\t\t\tGET_PIXEL(0, -1)*u_kernel[1] +\n\t\t\t\tGET_PIXEL(+1, -1)*u_kernel[2]) -\n\t\t\t   length(GET_PIXEL(-1, +1)*u_kernel[0] +\n\t\t\t\tGET_PIXEL(0, +1)*u_kernel[1] +\n\t\t\t\tGET_PIXEL(+1, +1)*u_kernel[2]));\n\n   ///gl_FragColor = vec4(vec3(length(vec2(dx, dy))), 1.0);\n   float theta = (atan(dy, dx) + M_PI) / (2.0*M_PI);\n   gl_FragColor = vec4(length(vec2(dx, dy)), theta, 0.0, 1.0);\n}"),
h=e.getUniformLocation(c,"u_kernel[0]");e.uniform1fv(h,b);a.execute(c);e=a.createProgram("edgeNMS","\nprecision mediump float;\n\n#define KERNEL_SIZE 3\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\n#define M_PI 3.1415926535897932384626433832795\n\nvoid main() {\n\tvec2 onePixel = vec2(1.0, 1.0) / u_textureSize;\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tvec4 cc = texture2D(u_image, textCoord);   \n\tfloat theta = degrees(cc.y*M_PI*2.0); \n\tint ax = 0, ay = 0; \n\tif ((theta >= 337.5) || (theta < 22.5))       { ax = 1; ay = 0; }\n\telse if ((theta >= 22.5) && (theta < 67.5))   { ax = 1; ay = 1; }\n\telse if ((theta >= 67.5) && (theta < 112.5))  { ax = 0; ay = 1; }\n\telse if ((theta >= 112.5) && (theta < 157.5)) { ax =-1; ay = 1; }\n\telse if ((theta >= 157.5) && (theta < 202.5)) { ax =-1; ay = 0; }\n\telse if ((theta >=202.5) && (theta < 247.5))  { ax =-1; ay =-1; }\n\telse if ((theta >=247.5) && (theta < 292.5))  { ax = 0; ay =-1; }\n\telse if ((theta >= 292.5) && (theta < 337.5)) { ax = 1; ay =-1; }\n\n\tvec4 ca = texture2D(u_image, textCoord + onePixel*vec2(ax, ay));\n\tvec4 cb = texture2D(u_image, textCoord + onePixel*vec2(-ax, -ay));\n\tgl_FragColor = vec4((((cc.x <= ca.x) || (cc.x < cb.x)) ? vec3(0) : vec3(cc.x)), 1.0);\n}");
a.execute(e)}f.prototype.sobel=function(){b(this,[1,2,1])};f.prototype.schaar=function(){b(this,[3,10,3])}})(window.FivekoGFX);(function(f){f.prototype.symmetricnn=function(b,a){var e=this.params.symmetricnn;b+=!(b&1);e&&e.size!==b&&this.deleteProgram("symmetricnn");this.params.symmetricnn={size:b};for(var e=this.createProgram("symmetricnn","\nprecision mediump float;\n\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\n#define KERNEL_SIZE %kernelSize%\n#define HALF_SIZE (KERNEL_SIZE / 2)\n\nvoid main() {\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tvec2 onePixel = vec2(1.0, 1.0) / u_textureSize;\n\tvec4 meanColor = vec4(0);\n\tvec4 v = texture2D(u_image, textCoord);\n\tfor (int y = 0; y <= HALF_SIZE; y++){\n\t\tfor (int x = -HALF_SIZE; x <= HALF_SIZE; x++){\n\t\t\tvec4 v1 = texture2D(u_image, textCoord + vec2(x, y) * onePixel);  \n\t\t\tvec4 v2 = texture2D(u_image, textCoord - vec2(x, y) * onePixel);\n\t\t\tvec4 d1 = abs(v - v1);\n\t\t\tvec4 d2 = abs(v - v2);\n\t\t\tvec4 rv = vec4( ((d1[0] < d2[0]) ? v1[0] : v2[0]),\n\t\t\t\t\t\t\t((d1[1] < d2[1]) ? v1[1] : v2[1]),\n\t\t\t\t\t\t\t((d1[2] < d2[2]) ? v1[2] : v2[2]), v.a);\n\t\t\tmeanColor += rv;\n\t\t}\n\t}\n\tgl_FragColor = meanColor / float(KERNEL_SIZE*(HALF_SIZE + 1));\n}".replace(/%kernelSize%/g,
b)),g=0;g<a;g++)this.execute(e)}})(window.FivekoGFX);(function(f){function b(a,b){var e=this.createProgram(a,b);this.execute(e)}f.prototype.rgb2grey=function(){b.call(this,"rgb2grey","\nprecision mediump float;\n\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nvec4 scale = vec4(0.299,  0.587,  0.114, 0.0);\nvoid main() {\n\tvec4 color = texture2D(u_image, gl_FragCoord.xy / u_textureSize);\n\tgl_FragColor = vec4(vec3(dot(color,scale)), color.a);\n}")};f.prototype.rgb2luma=function(){b.call(this,"rgb2lum",shaderSourceRGB2LUMA)};
f.prototype.rgb2ycbcr=function(){b.call(this,"rgb2ycbcr","\nprecision mediump float; \n\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize; \nmat4 scale =   mat4(0.257,  0.504,  0.098, 0.0, \n                   -0.148, -0.291,  0.439, 0.0, \n                    0.439, -0.368, -0.071, 0.0, \n                    1.0, 1.0,  1.0, 1.0 );\n\nvoid main() {\n\tvec4 color = texture2D(u_image, gl_FragCoord.xy / u_textureSize);\n\tgl_FragColor = color*scale + vec4(0.0625, 0.5, 0.5, 0);\n}")};
f.prototype.ycbcr2rgb=function(){b.call(this,"ycbcr2rgb","\nprecision mediump float;\n\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nmat4 scale =   mat4(1.164,  0.000,  1.596, 0.0,\n                    1.164, -0.392, -0.813, 0.0,\n                    1.164,  2.017,  0.000, 0.0,\n                    1.0, 1.0,  1.0, 1.0 );\n\nvoid main() {\n\tvec4 color = texture2D(u_image, gl_FragCoord.xy / u_textureSize);\n\tgl_FragColor = (color- vec4(0.0625, 0.5, 0.5, 0))*scale ;\n}")};
f.prototype.skinMask=function(){var a=this.gl,b=this.createProgram("skinMask","\nprecision mediump float;\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nvec4 thr = vec4(80.0/255.0, 120.0/255.0, 133.0/255.0, 173.0/255.0);\nvoid main() {\n\tvec4 color = texture2D(u_image, gl_FragCoord.xy / u_textureSize);\n\tgl_FragColor = vec4(vec3(( (color[0] > thr[0]) && \n\t\t\t\t(color[1] >= thr[0]) && (color[1] <= thr[1]) && \n\t\t\t\t(color[2] >= thr[2]) && (color[2] <=thr[3])) ? 1.0 : 0.0), \n\t\t\t\tcolor.a);\n}");
this.rgb2ycbcr();a.useProgram(b);this.execute(b)};f.prototype.rgb2xyz=function(){b.call(this,"rgb2xyz","\nprecision mediump float;\n\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\n#define SCALE(_c) (((_c) > 0.04045) ? (pow(((_c) + 0.055 ) / 1.055, 2.4)) : ((_c)/ 12.92))\nmat4 scale =   mat4(0.4124,  0.3576,  0.1805, 0.0, \n                    0.2126,  0.7152,  0.0722, 0.0, \n                    0.0193,  0.1192,  0.9505, 0.0, \n                    1.0, 1.0,  1.0, 1.0 );\nvoid main() {\n\tvec4 color = texture2D(u_image, gl_FragCoord.xy / u_textureSize);\n\tvec4 rgb = vec4(SCALE(color.r), SCALE(color.g), SCALE(color.b), color.a); \n\tgl_FragColor = rgb*scale;\n}")};
f.prototype.rgb2hsl=function(){b.call(this,"rgb2hsl","\nprecision mediump float;\n\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\n\nvoid main() {\n\tvec4 color = texture2D(u_image, gl_FragCoord.xy / u_textureSize);\n\tfloat cMin = min(min(color.r, color.g), color.b);\n\tfloat cMax = max(max(color.r, color.g), color.b);\n\tfloat L = (cMax + cMin)/(2.0);\n\t\n\tif (cMin == cMax){\n\t\tgl_FragColor = vec4(vec3(0, 0, L), color.a); \n\t\treturn;\n\t}\n\t// Calc Saturation\n\tfloat delta = (cMax - cMin);\n\tfloat S = ((L > 0.5) ? (delta / (2.0 - cMax - cMin)) : (delta / (cMax + cMin)));\n\t\n\t// Calc Hue\n\tfloat H = (color.r == cMax) ? (((color.g - color.b) / delta)) :\n\t\t\t\t((color.g == cMax) ? (2.0 + (color.b - color.r) / delta) :\n\t\t\t\t((4.0 + (color.r - color.g) / delta)));\n\tH = ((H < 0.0) ? (H + 6.0) : H) / 6.0;\n\tgl_FragColor = vec4(vec3(H, S, L), color.a);\n}")};
f.prototype.colormap=function(a){var b=this.gl,g=this.createProgram("colormap","\nprecision mediump float;\n\n// our texture\nuniform vec2 u_textureSize;\nuniform sampler2D u_image;\nuniform sampler2D u_colorTable;\n\nvoid main() {\n\tvec2 pos = vec2(texture2D(u_image, gl_FragCoord.xy / u_textureSize).x, 0.0);\n\tvec4 color = texture2D(u_colorTable, pos);\n\t\n\tgl_FragColor = color;\n}");b.useProgram(g);this.makeTextImage2D(g,1,"u_colorTable",a.length,1,b.LUMINANCE,b.UNSIGNED_BYTE,a);this.execute(g)};
f.prototype.rgb2bin=function(a){var b=this.gl,g=this.createProgram("rgb2bin","\nprecision mediump float;\n\n// our texture\nuniform vec2 u_textureSize;\nuniform sampler2D u_image;\nuniform vec4 u_threshold;\n\nvoid main() {\n\tvec4 color = texture2D(u_image, gl_FragCoord.xy / u_textureSize);\n\t\n\tgl_FragColor = vec4(greaterThan(color, u_threshold));\n}");b.uniform4fv(b.getUniformLocation(g,"u_threshold"),a);this.execute(g)}})(window.FivekoGFX);(function(f){function b(b,g){function c(a,b){return d[a+1]-d[b+1]}function e(a){for(var b=0;4>b;b++){var e=a+m[b];if(0===d[e]){d[e]=d[a];var h=f[a+0]+f[e+0]>>>1,g=f[a+0]-f[e+0],k=f[a+1]-f[e+1],l=f[a+2]-f[e+2];d[e+1]=Math.sqrt(((512+h)*g*g>>8)+4*k*k+((767-h)*l*l>>8));p.push(e,c)}}}for(var d=new b.data.constructor(new ArrayBuffer(b.data.length)),f=b.data,p=new a,m=[-4,4,4*-b.width,4*b.width],l=4*b.width,k=0,n=l*b.height;k<l;k+=4)d[k]=d[k+n]=255;k=0;for(n=b.height*l;k<n;k+=l)d[k]=d[k+l-1]=255;k=0;for(n=
g.length;g[k];k++)for(var n=g[k].pixels,q=0,r=n.length;q<r;q++)d[n[q]]=80*(k+1),e(n[q]);for(;!p.empty();)n=p.pop(),e(n);k=l+4;for(n=l*b.height-l;k<n;k+=4)160==d[k]&&(f[k+1]=f[k+2]=255*m.reduce(function(a,b){return a|d[k]^d[k+b]},0))}var a=function(){this.nodes=[]};a.prototype.push=function(a,b){for(var c=this.nodes,e=0,d=c.length;e<d;){var f=e+d>>>1;0>b(a,c[f])?e=f+1:d=f}c.splice(e,0,a)};a.prototype.pop=function(){return this.nodes.pop()};a.prototype.empty=function(){return 0===this.nodes.length};
a.prototype.size=function(){return this.nodes.length};f.prototype.watershed=function(a,f){var c=a.getContext("2d"),e=c.getImageData(0,0,a.width,a.height);b(e,f);c.putImageData(e,0,0)}})(window.FivekoGFX);(function(f){function b(a,b,f){var c=this.gl;a=this.createProgram(a+b,"\nprecision mediump float;\n\n#define KERNEL_SIZE %kernelSize%\n#define KERNEL_HALF KERNEL_SIZE / 2\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nuniform vec2 u_direction;\n\n#define GET_PIXEL(_p) (texture2D(u_image, textCoord + onePixel*vec2(_p)))\n#define CMP  %cmpMethod%\n\nvoid main() {\n\tvec2 onePixel = u_direction / u_textureSize;\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tvec4 resultColor = GET_PIXEL(0);\n\tfor (int i = -KERNEL_HALF; i <= KERNEL_HALF; i++){\n\t\tresultColor = CMP(resultColor, GET_PIXEL(i));\n\t}\n\tgl_FragColor = vec4(resultColor.rgb, 1.0);\n}".replace(/%kernelSize%/g,
b).replace(/%cmpMethod%/g,f));c.useProgram(a);b=c.getUniformLocation(a,"u_direction");c.uniform2fv(b,[0,1]);this.execute(a);c.uniform2fv(b,[1,0]);this.execute(a)}f.prototype.erosion=function(a){return b.call(this,"erosion",a||3,"min")};f.prototype.dilation=function(a){return b.call(this,"dilation",a||3,"max")}})(window.FivekoGFX);(function(f){f.prototype.logpolar=function(){var b=this.gl,a=this.createProgram("logpolar","\nprecision mediump float;\n\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nconst float PI = atan(1.0, 0.0)*2.0;\nconst float PI_2 = 2.0*PI;\n#define IN_RANGE(v_) (((v_) >= 0.0) && ((v_) <= 1.0))\n\nvoid main() {\n\tvec2 p = gl_FragCoord.xy / u_textureSize;\n\tfloat radius = (exp(p.x) - 1.0)/1.718281828459045;\n\tfloat angle = PI + PI_2*p.y;\n\tvec2 polar = vec2(radius*cos(angle), radius*sin(angle)) + vec2(0.5);\n\tif (IN_RANGE(polar.x) && IN_RANGE(polar.y))\n\t\tgl_FragColor = texture2D(u_image, polar);\n\telse\n\t\tgl_FragColor = vec4(vec3(0.0), 1.0);\n}");
b.useProgram(a);this.execute(a)}})(window.FivekoGFX);(function(f){f.prototype.lbp=function(){var b=this.gl,a=this.createProgram("lbp","\nprecision mediump float;\n\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\n#define GET_PIXEL(_x, _y) (texture2D(u_image, textCoord + onePixel*vec2(_x, _y)))\n#define CMP(_x, _y) vec4(greaterThanEqual((_x), (_y)))\n\nvoid main() {\n\tvec2 onePixel = vec2(1.0, 1.0) / u_textureSize;\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tvec4 color = GET_PIXEL(0, 0);\n\tvec4 value = CMP(color, GET_PIXEL(-1, -1))*0.5 +\n\t\t\t\t CMP(color, GET_PIXEL(-1,  0))*0.25 +\n\t\t\t\t CMP(color, GET_PIXEL(-1,  1))*0.125 +\n\t\t\t\t CMP(color, GET_PIXEL( 0,  1))*0.0625 +\n\t\t\t\t CMP(color, GET_PIXEL( 1,  1))*0.03125 +\n\t\t\t\t CMP(color, GET_PIXEL( 1,  0))*0.015625 +\n\t\t\t\t CMP(color, GET_PIXEL( 1, -1))*0.0078125 +\n\t\t\t\t CMP(color, GET_PIXEL( 0, -1))*0.00390625;\n\n\tgl_FragColor = vec4(value.rgb, 1.0);\n}");
b.useProgram(a);this.execute(a)}})(window.FivekoGFX);(function(f){f.prototype.harrisCorners=function(){var b=this.gl,a=this.createProgram("harris","\nprecision mediump float;\n\n#define KERNEL_SIZE 3\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nuniform float u_kernel[KERNEL_SIZE];\nuniform int u_direction;\n\n#define GET_PIXEL(_x, _y) (texture2D(u_image, textCoord + onePixel*vec2(_x, _y)))\n\n#define DET(_p)     ((_p).x*(_p).y - (_p).z*(_p).z)\n#define TRACE(_p)   ((_p).x + (_p).y)\n// Choose desired Harris method (0 or 1)\n#define USED_METHOD 1\n\nvoid main() {\n\tvec2 onePixel = vec2(1.0, 1.0) / u_textureSize;\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\t\n\tif (u_direction == 0){\n\t\tfloat dx = length((GET_PIXEL(-1, -1)*u_kernel[0] +\n\t\t\t\t\tGET_PIXEL(-1,  0)*u_kernel[1] +\n\t\t\t\t\tGET_PIXEL(-1, +1)*u_kernel[2]) -\n\t\t\t\t   (GET_PIXEL(+1, -1)*u_kernel[0] +\n\t\t\t\t\tGET_PIXEL(+1,  0)*u_kernel[1] +\n\t\t\t\t\tGET_PIXEL(+1, +1)*u_kernel[2]));\n\t\tfloat dy = length((GET_PIXEL(-1, -1)*u_kernel[0] +\n\t\t\t\t\tGET_PIXEL(0, -1)*u_kernel[1] +\n\t\t\t\t\tGET_PIXEL(+1, -1)*u_kernel[2]) -\n\t\t\t\t   (GET_PIXEL(-1, +1)*u_kernel[0] +\n\t\t\t\t\tGET_PIXEL(0, +1)*u_kernel[1] +\n\t\t\t\t\tGET_PIXEL(+1, +1)*u_kernel[2]));\n\t\t\n\t\tgl_FragColor = vec4(dx*dx, dy*dy, dx*dy, 1.0);\n\t}\n\telse\n\t{\n\t\tvec4 p = (GET_PIXEL(0, 0) + GET_PIXEL(-1, -1) +\n\t\t\t\tGET_PIXEL(-1,  0) + GET_PIXEL(-1,  1) +\n\t\t\t\tGET_PIXEL( 0,  1) + GET_PIXEL( 1,  1) +\n\t\t\t\tGET_PIXEL( 1,  0) + GET_PIXEL( 1, -1) +\n\t\t\t\tGET_PIXEL( 0, -1)) / 9.0;\n\t\n#if (USED_METHOD == 0)\n\t\tfloat k = 0.04;\n\t\tfloat R = DET(p) - (k * (TRACE(p)*TRACE(p)));\n#else  // Harris-Noble corner measure\n\t\tfloat R = DET(p) / (TRACE(p) + 1e-31);\n#endif\n\t\tgl_FragColor = vec4(vec3(max(R, 0.0)), 1.0);\n\t}\n}");
b.useProgram(a);var e=b.getUniformLocation(a,"u_direction"),f=b.getUniformLocation(a,"u_kernel[0]");b.uniform1fv(f,[1,2,1]);b.uniform1i(e,0);this.execute(a);b.uniform1i(e,1);this.execute(a)}})(window.FivekoGFX);(function(f){f.prototype.bilateral=function(b,a,e,f){var c=this.gl,h=9,d=Math.sqrt(2*Math.PI)*b,g=0;0==h%2&&h++;var p=new Float32Array(9),m=2*b*b,l;parseInt(h/2);for(l=0;9>l;l++)p[l]=Math.exp(-(l*l)/m)/d,g+=p[l];for(d=0;d<h;d++)p[d]/=g;g=2*a*a;h=new Float32Array(256);for(m=d=0;256>m;m++)l=m/255,h[m]=Math.max(Math.exp(-(l*l/g)),0),d+=h[m];for(m=0;256>m;m++)h[m]/=d;g=this.createProgram("bilateralSpatial","\nprecision mediump float;\n// our texture\nuniform sampler2D u_image;\nuniform sampler2D u_gaussTable;\nuniform vec2 u_textureSize;\nuniform float u_sptSigma;\nuniform float u_intSigma;\n#define KERNEL_SIZE 5\n#define DIFF(x, y) (((x) > (y)) ? (x - y) : (y - x))\n#define SP_DIF(r, s) max(exp(-((r)*(r))) / (2.0*s*s), 0.0)\n#define INT_DIF(r, s) max(exp(-((r)*(r)) / (2.0*s*s)), 0.0)\n#define WCALC(v1, v2) exp(-(v1 + v2))\nvoid main() {\n\tconst int ms = KERNEL_SIZE / 2;\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tvec2 onePixel = vec2(1.0, 1.0) / u_textureSize;\n\tvec4 centerPixel = texture2D(u_image, textCoord);\n\tvec4 meanColor = vec4(0);\n\tfloat weightSum = (0.0);\n\tfor (int i = -KERNEL_SIZE; i <= KERNEL_SIZE; i++)\n\t{\n\t\tfor (int j = -KERNEL_SIZE; j <= KERNEL_SIZE; j++) {\n\t\t\tvec4 currentPixel = texture2D(u_image, textCoord + onePixel*vec2(i, j));\n\t\t\tfloat weight = exp(-distance(centerPixel, currentPixel) / (u_intSigma));\n\t\t\tmeanColor += (currentPixel*weight);\n\t\t\tweightSum += weight;\n\t\t}\n\t}\n\tgl_FragColor = meanColor / weightSum;//vec4(meanColor.rgb/weightSum, 1.0);\n}");
c.useProgram(g);d=c.getUniformLocation(g,"u_spatialKernel[0]");m=c.getUniformLocation(g,"u_intesityKernel[0]");c.activeTexture(c.TEXTURE0);l=c.getUniformLocation(g,"u_sptSigma");var k=c.getUniformLocation(g,"u_intSigma");c.uniform1f(l,b);c.uniform1f(k,2*a*a);c.uniform1fv(d,p);c.uniform1fv(m,h);for(b=0;b<f+1;b++)this.execute(g);0<e&&(f=this.gl,b=this.createProgram("bilateralSobel","\nprecision mediump float;\n\n#define KERNEL_SIZE 3\n// our texture\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nuniform float u_kernel[KERNEL_SIZE];\nuniform float u_threshold;\n#define GET_PIXEL(_x, _y) (texture2D(u_image, textCoord + onePixel*vec2(_x, _y)))\n \n\nvoid main() {\n\tvec2 onePixel = vec2(1.0, 1.0) / u_textureSize;\n\tvec2 textCoord = gl_FragCoord.xy / u_textureSize;\n\tfloat dx = (length(GET_PIXEL(-1, -1)*u_kernel[0] +\n\t\t\t\tGET_PIXEL(-1,  0)*u_kernel[1] +\n\t\t\t\tGET_PIXEL(-1, +1)*u_kernel[2]) -\n\t\t\t   length(GET_PIXEL(+1, -1)*u_kernel[0] +\n\t\t\t\tGET_PIXEL(+1,  0)*u_kernel[1] +\n\t\t\t\tGET_PIXEL(+1, +1)*u_kernel[2]));\n\tfloat dy = (length(GET_PIXEL(-1, -1)*u_kernel[0] +\n\t\t\t\tGET_PIXEL(0, -1)*u_kernel[1] +\n\t\t\t\tGET_PIXEL(+1, -1)*u_kernel[2]) -\n\t\t\t   length(GET_PIXEL(-1, +1)*u_kernel[0] +\n\t\t\t\tGET_PIXEL(0, +1)*u_kernel[1] +\n\t\t\t\tGET_PIXEL(+1, +1)*u_kernel[2]));\n\tfloat v = length(vec2(dx, dy));\n\t//gl_FragColor = vec4(GET_PIXEL(0, 0).rgb*(1.0 - v*u_threshold), 1.0);\n\t\n\tif (v > u_threshold)\n\t\tgl_FragColor = vec4(GET_PIXEL(0, 0).rgb*(1.0 - v), 1.0);\n\telse \n\t\tdiscard;\n   ///gl_FragColor = vec4(length(vec2(dx, dy)), theta, 0.0, 1.0);\n}"),
f.useProgram(b),a=f.getUniformLocation(b,"u_threshold"),c=f.getUniformLocation(b,"u_kernel[0]"),f.uniform1fv(c,[3,10,3]),f.uniform1f(a,e/100),this.execute(b))}})(window.FivekoGFX);
